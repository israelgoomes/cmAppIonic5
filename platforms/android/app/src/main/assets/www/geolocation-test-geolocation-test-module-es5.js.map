{"version":3,"sources":["src/app/geolocation-test/geolocation-test.page.html","src/app/geolocation-test/geolocation-test-routing.module.ts","src/app/geolocation-test/geolocation-test.module.ts","src/app/geolocation-test/geolocation-test.page.scss","src/app/geolocation-test/geolocation-test.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-toolbar>\\r\\n  <ion-icon (click)=\\\"voltar()\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n</ion-toolbar>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <ion-button (click)=\\\"getCurrentCoordinates()\\\" expand=\\\"block\\\">\\r\\n      Buscar localização\\r\\n    </ion-button>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Location Coordinates</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>\\r\\n        Latitue\\r\\n      </ion-label>\\r\\n      {{latitude}}\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>\\r\\n        Longitude\\r\\n      </ion-label>\\r\\n      {{longitude}}\\r\\n    </ion-item>\\r\\n    </ion-list>    \\r\\n  </div>\\r\\n\\r\\n\\r\\n<ion-card *ngIf=\\\"address\\\">\\r\\n  <ion-card-header>\\r\\n    Endereço\\r\\n  </ion-card-header>\\r\\n  <ion-card-content>\\r\\n    País: {{address?.countryName}}<br>\\r\\n    Cidade: {{address?.subAdministrativeArea}} <br>\\r\\n    Estado: {{address?.administrativeArea}}<br>\\r\\n    Rua: {{address?.thoroughfare}}<br>\\r\\n    Bairro: {{address?.subLocality}}<br>\\r\\n    Cep: {{address?.postalCode}}<br>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GeolocationTestPage } from './geolocation-test.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GeolocationTestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GeolocationTestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GeolocationTestPageRoutingModule } from './geolocation-test-routing.module';\r\n\r\nimport { GeolocationTestPage } from './geolocation-test.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GeolocationTestPageRoutingModule\r\n  ],\r\n  declarations: [GeolocationTestPage]\r\n})\r\nexport class GeolocationTestPageModule {}\r\n","export default \"ion-icon {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VvbG9jYXRpb24tdGVzdC9DOlxcVXNlcnNcXGlnb21lc2xhXFxEb2N1bWVudHNcXGlvbmljXFxjbUFwcElvbmljNS9zcmNcXGFwcFxcZ2VvbG9jYXRpb24tdGVzdFxcZ2VvbG9jYXRpb24tdGVzdC5wYWdlLnNjc3MiLCJzcmMvYXBwL2dlb2xvY2F0aW9uLXRlc3QvZ2VvbG9jYXRpb24tdGVzdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9nZW9sb2NhdGlvbi10ZXN0L2dlb2xvY2F0aW9uLXRlc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWljb257XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbn0iLCJpb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-geolocation-test',\r\n  templateUrl: './geolocation-test.page.html',\r\n  styleUrls: ['./geolocation-test.page.scss'],\r\n})\r\nexport class GeolocationTestPage implements OnInit {\r\n\r\nconstructor(private geolocation: Geolocation,  private nativeGeocoder: NativeGeocoder, private router: Router) {}\r\n  latitude: any = 0; // latitude\r\n  longitude: any = 0; // longitude\r\n  teste: any;\r\n\r\n\r\n  options = {\r\n    timeout: 10000,\r\n    enableHighAccuracy: true,\r\n    maximumAge: 3600\r\n  };\r\n  address: NativeGeocoderResult;\r\n\r\n  // geocoder options\r\n  nativeGeocoderOptions: NativeGeocoderOptions = {\r\n    useLocale: true,\r\n    maxResults: 5\r\n  };\r\n\r\n  ngOnInit() {}\r\n\r\n  // use geolocation to get user's device coordinates\r\n  getCurrentCoordinates() {\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      this.latitude = resp.coords.latitude;\r\n      this.longitude = resp.coords.longitude;\r\n      this.getAddress(this.latitude, this.longitude);\r\n    \r\n    }).catch((error) => {\r\n       console.log('Error getting location', error);\r\n     });\r\n    \r\n  }\r\n\r\n  // get address using coordinates\r\n  getAddress(lat, long) {\r\n    this.nativeGeocoder.reverseGeocode(lat, long, this.nativeGeocoderOptions)\r\n    .then((res: NativeGeocoderResult[]) => {\r\n      console.log('Resposta direta', res)\r\n      this.address = res[0];\r\n      this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\r\n      + this.getEndereco()\r\n      + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\r\n      console.log('Valor passado na img', this.teste)\r\n      //this.pretifyAddress(res[0]);\r\n    })\r\n    .catch((error: any) => {\r\n      alert('Error getting location' + JSON.stringify(error));\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  // address\r\n  pretifyAddress(address) {\r\n    const obj = [];\r\n    let data = '';\r\n    for (const key in address) {\r\n      obj.push(address[key]);\r\n    }\r\n    obj.reverse();\r\n    for (const val in obj) {\r\n      if (obj[val].length) {\r\n      data += obj[val]+', ';\r\n      }\r\n    }\r\n    return data.slice(0, -2);\r\n  }\r\n\r\n  getEndereco(){\r\n    return this.address.thoroughfare + ', ' + this.address.subLocality + ', ' + this.address.subAdministrativeArea + ', ' + this.address.administrativeArea;\r\n  }\r\n\r\ngetMap(){\r\n  this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\r\n   + this.getEndereco()\r\n   + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\r\n\r\n}\r\nvoltar(){\r\n  this.router.navigate(['/tabs/tabs/clientes'])\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"geolocation-test-geolocation-test-module-es5.js"}