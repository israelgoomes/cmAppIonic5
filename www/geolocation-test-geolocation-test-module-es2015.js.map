{"version":3,"sources":["./src/app/geolocation-test/geolocation-test.page.html","./src/app/geolocation-test/geolocation-test-routing.module.ts","./src/app/geolocation-test/geolocation-test.module.ts","./src/app/geolocation-test/geolocation-test.page.scss","./src/app/geolocation-test/geolocation-test.page.ts"],"names":[],"mappings":"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","file":"geolocation-test-geolocation-test-module-es2015.js","sourcesContent":["export default \"<ion-toolbar>\\r\\n  <ion-icon (click)=\\\"voltar()\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n</ion-toolbar>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <ion-button (click)=\\\"getCurrentCoordinates()\\\" expand=\\\"block\\\">\\r\\n      Buscar localização\\r\\n    </ion-button>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Location Coordinates</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>\\r\\n        Latitue\\r\\n      </ion-label>\\r\\n      {{latitude}}\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>\\r\\n        Longitude\\r\\n      </ion-label>\\r\\n      {{longitude}}\\r\\n    </ion-item>\\r\\n    </ion-list>    \\r\\n  </div>\\r\\n\\r\\n\\r\\n<ion-card *ngIf=\\\"address\\\">\\r\\n  <ion-card-header>\\r\\n    Endereço\\r\\n  </ion-card-header>\\r\\n  <ion-card-content>\\r\\n    País: {{address?.countryName}}<br>\\r\\n    Cidade: {{address?.subAdministrativeArea}} <br>\\r\\n    Estado: {{address?.administrativeArea}}<br>\\r\\n    Rua: {{address?.thoroughfare}}<br>\\r\\n    Bairro: {{address?.subLocality}}<br>\\r\\n    Cep: {{address?.postalCode}}<br>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GeolocationTestPage } from './geolocation-test.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GeolocationTestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GeolocationTestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GeolocationTestPageRoutingModule } from './geolocation-test-routing.module';\r\n\r\nimport { GeolocationTestPage } from './geolocation-test.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GeolocationTestPageRoutingModule\r\n  ],\r\n  declarations: [GeolocationTestPage]\r\n})\r\nexport class GeolocationTestPageModule {}\r\n","export default \"ion-icon {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VvbG9jYXRpb24tdGVzdC9DOlxcVXNlcnNcXGlnb21lc2xhXFxEb2N1bWVudHNcXGlvbmljXFxjbUFwcElvbmljNS9zcmNcXGFwcFxcZ2VvbG9jYXRpb24tdGVzdFxcZ2VvbG9jYXRpb24tdGVzdC5wYWdlLnNjc3MiLCJzcmMvYXBwL2dlb2xvY2F0aW9uLXRlc3QvZ2VvbG9jYXRpb24tdGVzdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9nZW9sb2NhdGlvbi10ZXN0L2dlb2xvY2F0aW9uLXRlc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWljb257XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbn0iLCJpb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-geolocation-test',\r\n  templateUrl: './geolocation-test.page.html',\r\n  styleUrls: ['./geolocation-test.page.scss'],\r\n})\r\nexport class GeolocationTestPage implements OnInit {\r\n\r\nconstructor(private geolocation: Geolocation,  private nativeGeocoder: NativeGeocoder, private router: Router) {}\r\n  latitude: any = 0; // latitude\r\n  longitude: any = 0; // longitude\r\n  teste: any;\r\n\r\n\r\n  options = {\r\n    timeout: 10000,\r\n    enableHighAccuracy: true,\r\n    maximumAge: 3600\r\n  };\r\n  address: NativeGeocoderResult;\r\n\r\n  // geocoder options\r\n  nativeGeocoderOptions: NativeGeocoderOptions = {\r\n    useLocale: true,\r\n    maxResults: 5\r\n  };\r\n\r\n  ngOnInit() {}\r\n\r\n  // use geolocation to get user's device coordinates\r\n  getCurrentCoordinates() {\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      this.latitude = resp.coords.latitude;\r\n      this.longitude = resp.coords.longitude;\r\n      this.getAddress(this.latitude, this.longitude);\r\n    \r\n    }).catch((error) => {\r\n       console.log('Error getting location', error);\r\n     });\r\n    \r\n  }\r\n\r\n  // get address using coordinates\r\n  getAddress(lat, long) {\r\n    this.nativeGeocoder.reverseGeocode(lat, long, this.nativeGeocoderOptions)\r\n    .then((res: NativeGeocoderResult[]) => {\r\n      console.log('Resposta direta', res)\r\n      this.address = res[0];\r\n      this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\r\n      + this.getEndereco()\r\n      + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\r\n      console.log('Valor passado na img', this.teste)\r\n      //this.pretifyAddress(res[0]);\r\n    })\r\n    .catch((error: any) => {\r\n      alert('Error getting location' + JSON.stringify(error));\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  // address\r\n  pretifyAddress(address) {\r\n    const obj = [];\r\n    let data = '';\r\n    for (const key in address) {\r\n      obj.push(address[key]);\r\n    }\r\n    obj.reverse();\r\n    for (const val in obj) {\r\n      if (obj[val].length) {\r\n      data += obj[val]+', ';\r\n      }\r\n    }\r\n    return data.slice(0, -2);\r\n  }\r\n\r\n  getEndereco(){\r\n    return this.address.thoroughfare + ', ' + this.address.subLocality + ', ' + this.address.subAdministrativeArea + ', ' + this.address.administrativeArea;\r\n  }\r\n\r\ngetMap(){\r\n  this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\r\n   + this.getEndereco()\r\n   + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\r\n\r\n}\r\nvoltar(){\r\n  this.router.navigate(['/tabs/tabs/clientes'])\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}