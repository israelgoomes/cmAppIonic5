{"version":3,"sources":["src/app/geolocation-test/geolocation-test.page.html","src/app/geolocation-test/geolocation-test-routing.module.ts","src/app/geolocation-test/geolocation-test.module.ts","src/app/geolocation-test/geolocation-test.page.scss","src/app/geolocation-test/geolocation-test.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-toolbar>\\n  <ion-icon (click)=\\\"voltar()\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n</ion-toolbar>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n\\n    <ion-button (click)=\\\"getCurrentCoordinates()\\\" expand=\\\"block\\\">\\n      Buscar localização\\n    </ion-button>\\n\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Location Coordinates</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>\\n        Latitue\\n      </ion-label>\\n      {{latitude}}\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>\\n        Longitude\\n      </ion-label>\\n      {{longitude}}\\n    </ion-item>\\n    </ion-list>    \\n  </div>\\n\\n\\n<ion-card *ngIf=\\\"address\\\">\\n  <ion-card-header>\\n    Endereço\\n  </ion-card-header>\\n  <ion-card-content>\\n    País: {{address?.countryName}}<br>\\n    Cidade: {{address?.subAdministrativeArea}} <br>\\n    Estado: {{address?.administrativeArea}}<br>\\n    Rua: {{address?.thoroughfare}}<br>\\n    Bairro: {{address?.subLocality}}<br>\\n    Cep: {{address?.postalCode}}<br>\\n  </ion-card-content>\\n</ion-card>\\n\\n</ion-content>\\n\\n\\n\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GeolocationTestPage } from './geolocation-test.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeolocationTestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GeolocationTestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeolocationTestPageRoutingModule } from './geolocation-test-routing.module';\n\nimport { GeolocationTestPage } from './geolocation-test.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GeolocationTestPageRoutingModule\n  ],\n  declarations: [GeolocationTestPage]\n})\nexport class GeolocationTestPageModule {}\n","export default \"ion-icon {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VvbG9jYXRpb24tdGVzdC9DOlxcVXNlcnNcXGxzcmFlbFxcRGVza3RvcFxcUHJvamV0b3NcXGNtQXBwSW9uaWM1L3NyY1xcYXBwXFxnZW9sb2NhdGlvbi10ZXN0XFxnZW9sb2NhdGlvbi10ZXN0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvZ2VvbG9jYXRpb24tdGVzdC9nZW9sb2NhdGlvbi10ZXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2dlb2xvY2F0aW9uLXRlc3QvZ2VvbG9jYXRpb24tdGVzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvbntcclxuICAgIGZvbnQtc2l6ZTogMzBweDtcclxufSIsImlvbi1pY29uIHtcbiAgZm9udC1zaXplOiAzMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-geolocation-test',\n  templateUrl: './geolocation-test.page.html',\n  styleUrls: ['./geolocation-test.page.scss'],\n})\nexport class GeolocationTestPage implements OnInit {\n\nconstructor(private geolocation: Geolocation,  private nativeGeocoder: NativeGeocoder, private router: Router) {}\n  latitude: any = 0; // latitude\n  longitude: any = 0; // longitude\n  teste: any;\n\n\n  options = {\n    timeout: 10000,\n    enableHighAccuracy: true,\n    maximumAge: 3600\n  };\n  address: NativeGeocoderResult;\n\n  // geocoder options\n  nativeGeocoderOptions: NativeGeocoderOptions = {\n    useLocale: true,\n    maxResults: 5\n  };\n\n  ngOnInit() {}\n\n  // use geolocation to get user's device coordinates\n  getCurrentCoordinates() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      this.getAddress(this.latitude, this.longitude);\n    \n    }).catch((error) => {\n       console.log('Error getting location', error);\n     });\n    \n  }\n\n  // get address using coordinates\n  getAddress(lat, long) {\n    this.nativeGeocoder.reverseGeocode(lat, long, this.nativeGeocoderOptions)\n    .then((res: NativeGeocoderResult[]) => {\n      console.log('Resposta direta', res)\n      this.address = res[0];\n      this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\n      + this.getEndereco()\n      + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\n      console.log('Valor passado na img', this.teste)\n      //this.pretifyAddress(res[0]);\n    })\n    .catch((error: any) => {\n      alert('Error getting location' + JSON.stringify(error));\n      console.error(error);\n    });\n  }\n\n  // address\n  pretifyAddress(address) {\n    const obj = [];\n    let data = '';\n    for (const key in address) {\n      obj.push(address[key]);\n    }\n    obj.reverse();\n    for (const val in obj) {\n      if (obj[val].length) {\n      data += obj[val]+', ';\n      }\n    }\n    return data.slice(0, -2);\n  }\n\n  getEndereco(){\n    return this.address.thoroughfare + ', ' + this.address.subLocality + ', ' + this.address.subAdministrativeArea + ', ' + this.address.administrativeArea;\n  }\n\ngetMap(){\n  this.teste = 'https://maps.googleapis.com/maps/api/staticmap?size=400x400&zoom=12&markers=color:red|'\n   + this.getEndereco()\n   + '&key=AIzaSyDIG5sfeA8GbckBb_ZHWUQdJhGR1w4iULc';\n\n}\nvoltar(){\n  this.router.navigate(['/tabs/tabs/clientes'])\n }\n\n}\n"],"sourceRoot":"webpack:///","file":"geolocation-test-geolocation-test-module-es5.js"}